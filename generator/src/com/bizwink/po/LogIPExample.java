package com.bizwink.po;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class LogIPExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public LogIPExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPIDIsNull() {
            addCriterion("PID is null");
            return (Criteria) this;
        }

        public Criteria andPIDIsNotNull() {
            addCriterion("PID is not null");
            return (Criteria) this;
        }

        public Criteria andPIDEqualTo(BigDecimal value) {
            addCriterion("PID =", value, "PID");
            return (Criteria) this;
        }

        public Criteria andPIDNotEqualTo(BigDecimal value) {
            addCriterion("PID <>", value, "PID");
            return (Criteria) this;
        }

        public Criteria andPIDGreaterThan(BigDecimal value) {
            addCriterion("PID >", value, "PID");
            return (Criteria) this;
        }

        public Criteria andPIDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PID >=", value, "PID");
            return (Criteria) this;
        }

        public Criteria andPIDLessThan(BigDecimal value) {
            addCriterion("PID <", value, "PID");
            return (Criteria) this;
        }

        public Criteria andPIDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PID <=", value, "PID");
            return (Criteria) this;
        }

        public Criteria andPIDIn(List<BigDecimal> values) {
            addCriterion("PID in", values, "PID");
            return (Criteria) this;
        }

        public Criteria andPIDNotIn(List<BigDecimal> values) {
            addCriterion("PID not in", values, "PID");
            return (Criteria) this;
        }

        public Criteria andPIDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PID between", value1, value2, "PID");
            return (Criteria) this;
        }

        public Criteria andPIDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PID not between", value1, value2, "PID");
            return (Criteria) this;
        }

        public Criteria andBEGINIPIsNull() {
            addCriterion("BEGINIP is null");
            return (Criteria) this;
        }

        public Criteria andBEGINIPIsNotNull() {
            addCriterion("BEGINIP is not null");
            return (Criteria) this;
        }

        public Criteria andBEGINIPEqualTo(String value) {
            addCriterion("BEGINIP =", value, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPNotEqualTo(String value) {
            addCriterion("BEGINIP <>", value, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPGreaterThan(String value) {
            addCriterion("BEGINIP >", value, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPGreaterThanOrEqualTo(String value) {
            addCriterion("BEGINIP >=", value, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPLessThan(String value) {
            addCriterion("BEGINIP <", value, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPLessThanOrEqualTo(String value) {
            addCriterion("BEGINIP <=", value, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPLike(String value) {
            addCriterion("BEGINIP like", value, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPNotLike(String value) {
            addCriterion("BEGINIP not like", value, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPIn(List<String> values) {
            addCriterion("BEGINIP in", values, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPNotIn(List<String> values) {
            addCriterion("BEGINIP not in", values, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPBetween(String value1, String value2) {
            addCriterion("BEGINIP between", value1, value2, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andBEGINIPNotBetween(String value1, String value2) {
            addCriterion("BEGINIP not between", value1, value2, "BEGINIP");
            return (Criteria) this;
        }

        public Criteria andENDIPIsNull() {
            addCriterion("ENDIP is null");
            return (Criteria) this;
        }

        public Criteria andENDIPIsNotNull() {
            addCriterion("ENDIP is not null");
            return (Criteria) this;
        }

        public Criteria andENDIPEqualTo(String value) {
            addCriterion("ENDIP =", value, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPNotEqualTo(String value) {
            addCriterion("ENDIP <>", value, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPGreaterThan(String value) {
            addCriterion("ENDIP >", value, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPGreaterThanOrEqualTo(String value) {
            addCriterion("ENDIP >=", value, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPLessThan(String value) {
            addCriterion("ENDIP <", value, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPLessThanOrEqualTo(String value) {
            addCriterion("ENDIP <=", value, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPLike(String value) {
            addCriterion("ENDIP like", value, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPNotLike(String value) {
            addCriterion("ENDIP not like", value, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPIn(List<String> values) {
            addCriterion("ENDIP in", values, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPNotIn(List<String> values) {
            addCriterion("ENDIP not in", values, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPBetween(String value1, String value2) {
            addCriterion("ENDIP between", value1, value2, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andENDIPNotBetween(String value1, String value2) {
            addCriterion("ENDIP not between", value1, value2, "ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPIsNull() {
            addCriterion("NUM_BEGINIP is null");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPIsNotNull() {
            addCriterion("NUM_BEGINIP is not null");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPEqualTo(Long value) {
            addCriterion("NUM_BEGINIP =", value, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPNotEqualTo(Long value) {
            addCriterion("NUM_BEGINIP <>", value, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPGreaterThan(Long value) {
            addCriterion("NUM_BEGINIP >", value, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPGreaterThanOrEqualTo(Long value) {
            addCriterion("NUM_BEGINIP >=", value, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPLessThan(Long value) {
            addCriterion("NUM_BEGINIP <", value, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPLessThanOrEqualTo(Long value) {
            addCriterion("NUM_BEGINIP <=", value, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPIn(List<Long> values) {
            addCriterion("NUM_BEGINIP in", values, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPNotIn(List<Long> values) {
            addCriterion("NUM_BEGINIP not in", values, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPBetween(Long value1, Long value2) {
            addCriterion("NUM_BEGINIP between", value1, value2, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_BEGINIPNotBetween(Long value1, Long value2) {
            addCriterion("NUM_BEGINIP not between", value1, value2, "NUM_BEGINIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPIsNull() {
            addCriterion("NUM_ENDIP is null");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPIsNotNull() {
            addCriterion("NUM_ENDIP is not null");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPEqualTo(Long value) {
            addCriterion("NUM_ENDIP =", value, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPNotEqualTo(Long value) {
            addCriterion("NUM_ENDIP <>", value, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPGreaterThan(Long value) {
            addCriterion("NUM_ENDIP >", value, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPGreaterThanOrEqualTo(Long value) {
            addCriterion("NUM_ENDIP >=", value, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPLessThan(Long value) {
            addCriterion("NUM_ENDIP <", value, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPLessThanOrEqualTo(Long value) {
            addCriterion("NUM_ENDIP <=", value, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPIn(List<Long> values) {
            addCriterion("NUM_ENDIP in", values, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPNotIn(List<Long> values) {
            addCriterion("NUM_ENDIP not in", values, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPBetween(Long value1, Long value2) {
            addCriterion("NUM_ENDIP between", value1, value2, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andNUM_ENDIPNotBetween(Long value1, Long value2) {
            addCriterion("NUM_ENDIP not between", value1, value2, "NUM_ENDIP");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIsNull() {
            addCriterion("COUNTRY is null");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIsNotNull() {
            addCriterion("COUNTRY is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYEqualTo(String value) {
            addCriterion("COUNTRY =", value, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYNotEqualTo(String value) {
            addCriterion("COUNTRY <>", value, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYGreaterThan(String value) {
            addCriterion("COUNTRY >", value, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYGreaterThanOrEqualTo(String value) {
            addCriterion("COUNTRY >=", value, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYLessThan(String value) {
            addCriterion("COUNTRY <", value, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYLessThanOrEqualTo(String value) {
            addCriterion("COUNTRY <=", value, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYLike(String value) {
            addCriterion("COUNTRY like", value, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYNotLike(String value) {
            addCriterion("COUNTRY not like", value, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIn(List<String> values) {
            addCriterion("COUNTRY in", values, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYNotIn(List<String> values) {
            addCriterion("COUNTRY not in", values, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYBetween(String value1, String value2) {
            addCriterion("COUNTRY between", value1, value2, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYNotBetween(String value1, String value2) {
            addCriterion("COUNTRY not between", value1, value2, "COUNTRY");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDIsNull() {
            addCriterion("COUNTRYID is null");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDIsNotNull() {
            addCriterion("COUNTRYID is not null");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDEqualTo(BigDecimal value) {
            addCriterion("COUNTRYID =", value, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDNotEqualTo(BigDecimal value) {
            addCriterion("COUNTRYID <>", value, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDGreaterThan(BigDecimal value) {
            addCriterion("COUNTRYID >", value, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("COUNTRYID >=", value, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDLessThan(BigDecimal value) {
            addCriterion("COUNTRYID <", value, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("COUNTRYID <=", value, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDIn(List<BigDecimal> values) {
            addCriterion("COUNTRYID in", values, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDNotIn(List<BigDecimal> values) {
            addCriterion("COUNTRYID not in", values, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COUNTRYID between", value1, value2, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCOUNTRYIDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COUNTRYID not between", value1, value2, "COUNTRYID");
            return (Criteria) this;
        }

        public Criteria andCITYIsNull() {
            addCriterion("CITY is null");
            return (Criteria) this;
        }

        public Criteria andCITYIsNotNull() {
            addCriterion("CITY is not null");
            return (Criteria) this;
        }

        public Criteria andCITYEqualTo(String value) {
            addCriterion("CITY =", value, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYNotEqualTo(String value) {
            addCriterion("CITY <>", value, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYGreaterThan(String value) {
            addCriterion("CITY >", value, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYGreaterThanOrEqualTo(String value) {
            addCriterion("CITY >=", value, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYLessThan(String value) {
            addCriterion("CITY <", value, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYLessThanOrEqualTo(String value) {
            addCriterion("CITY <=", value, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYLike(String value) {
            addCriterion("CITY like", value, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYNotLike(String value) {
            addCriterion("CITY not like", value, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYIn(List<String> values) {
            addCriterion("CITY in", values, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYNotIn(List<String> values) {
            addCriterion("CITY not in", values, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYBetween(String value1, String value2) {
            addCriterion("CITY between", value1, value2, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYNotBetween(String value1, String value2) {
            addCriterion("CITY not between", value1, value2, "CITY");
            return (Criteria) this;
        }

        public Criteria andCITYIDIsNull() {
            addCriterion("CITYID is null");
            return (Criteria) this;
        }

        public Criteria andCITYIDIsNotNull() {
            addCriterion("CITYID is not null");
            return (Criteria) this;
        }

        public Criteria andCITYIDEqualTo(BigDecimal value) {
            addCriterion("CITYID =", value, "CITYID");
            return (Criteria) this;
        }

        public Criteria andCITYIDNotEqualTo(BigDecimal value) {
            addCriterion("CITYID <>", value, "CITYID");
            return (Criteria) this;
        }

        public Criteria andCITYIDGreaterThan(BigDecimal value) {
            addCriterion("CITYID >", value, "CITYID");
            return (Criteria) this;
        }

        public Criteria andCITYIDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("CITYID >=", value, "CITYID");
            return (Criteria) this;
        }

        public Criteria andCITYIDLessThan(BigDecimal value) {
            addCriterion("CITYID <", value, "CITYID");
            return (Criteria) this;
        }

        public Criteria andCITYIDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("CITYID <=", value, "CITYID");
            return (Criteria) this;
        }

        public Criteria andCITYIDIn(List<BigDecimal> values) {
            addCriterion("CITYID in", values, "CITYID");
            return (Criteria) this;
        }

        public Criteria andCITYIDNotIn(List<BigDecimal> values) {
            addCriterion("CITYID not in", values, "CITYID");
            return (Criteria) this;
        }

        public Criteria andCITYIDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CITYID between", value1, value2, "CITYID");
            return (Criteria) this;
        }

        public Criteria andCITYIDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("CITYID not between", value1, value2, "CITYID");
            return (Criteria) this;
        }

        public Criteria andZONEIsNull() {
            addCriterion("ZONE is null");
            return (Criteria) this;
        }

        public Criteria andZONEIsNotNull() {
            addCriterion("ZONE is not null");
            return (Criteria) this;
        }

        public Criteria andZONEEqualTo(String value) {
            addCriterion("ZONE =", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONENotEqualTo(String value) {
            addCriterion("ZONE <>", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONEGreaterThan(String value) {
            addCriterion("ZONE >", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONEGreaterThanOrEqualTo(String value) {
            addCriterion("ZONE >=", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONELessThan(String value) {
            addCriterion("ZONE <", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONELessThanOrEqualTo(String value) {
            addCriterion("ZONE <=", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONELike(String value) {
            addCriterion("ZONE like", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONENotLike(String value) {
            addCriterion("ZONE not like", value, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONEIn(List<String> values) {
            addCriterion("ZONE in", values, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONENotIn(List<String> values) {
            addCriterion("ZONE not in", values, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONEBetween(String value1, String value2) {
            addCriterion("ZONE between", value1, value2, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONENotBetween(String value1, String value2) {
            addCriterion("ZONE not between", value1, value2, "ZONE");
            return (Criteria) this;
        }

        public Criteria andZONEIDIsNull() {
            addCriterion("ZONEID is null");
            return (Criteria) this;
        }

        public Criteria andZONEIDIsNotNull() {
            addCriterion("ZONEID is not null");
            return (Criteria) this;
        }

        public Criteria andZONEIDEqualTo(BigDecimal value) {
            addCriterion("ZONEID =", value, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andZONEIDNotEqualTo(BigDecimal value) {
            addCriterion("ZONEID <>", value, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andZONEIDGreaterThan(BigDecimal value) {
            addCriterion("ZONEID >", value, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andZONEIDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ZONEID >=", value, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andZONEIDLessThan(BigDecimal value) {
            addCriterion("ZONEID <", value, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andZONEIDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ZONEID <=", value, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andZONEIDIn(List<BigDecimal> values) {
            addCriterion("ZONEID in", values, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andZONEIDNotIn(List<BigDecimal> values) {
            addCriterion("ZONEID not in", values, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andZONEIDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ZONEID between", value1, value2, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andZONEIDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ZONEID not between", value1, value2, "ZONEID");
            return (Criteria) this;
        }

        public Criteria andPROVINCEIsNull() {
            addCriterion("PROVINCE is null");
            return (Criteria) this;
        }

        public Criteria andPROVINCEIsNotNull() {
            addCriterion("PROVINCE is not null");
            return (Criteria) this;
        }

        public Criteria andPROVINCEEqualTo(String value) {
            addCriterion("PROVINCE =", value, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCENotEqualTo(String value) {
            addCriterion("PROVINCE <>", value, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCEGreaterThan(String value) {
            addCriterion("PROVINCE >", value, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCEGreaterThanOrEqualTo(String value) {
            addCriterion("PROVINCE >=", value, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCELessThan(String value) {
            addCriterion("PROVINCE <", value, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCELessThanOrEqualTo(String value) {
            addCriterion("PROVINCE <=", value, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCELike(String value) {
            addCriterion("PROVINCE like", value, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCENotLike(String value) {
            addCriterion("PROVINCE not like", value, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCEIn(List<String> values) {
            addCriterion("PROVINCE in", values, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCENotIn(List<String> values) {
            addCriterion("PROVINCE not in", values, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCEBetween(String value1, String value2) {
            addCriterion("PROVINCE between", value1, value2, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVINCENotBetween(String value1, String value2) {
            addCriterion("PROVINCE not between", value1, value2, "PROVINCE");
            return (Criteria) this;
        }

        public Criteria andPROVIDIsNull() {
            addCriterion("PROVID is null");
            return (Criteria) this;
        }

        public Criteria andPROVIDIsNotNull() {
            addCriterion("PROVID is not null");
            return (Criteria) this;
        }

        public Criteria andPROVIDEqualTo(BigDecimal value) {
            addCriterion("PROVID =", value, "PROVID");
            return (Criteria) this;
        }

        public Criteria andPROVIDNotEqualTo(BigDecimal value) {
            addCriterion("PROVID <>", value, "PROVID");
            return (Criteria) this;
        }

        public Criteria andPROVIDGreaterThan(BigDecimal value) {
            addCriterion("PROVID >", value, "PROVID");
            return (Criteria) this;
        }

        public Criteria andPROVIDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PROVID >=", value, "PROVID");
            return (Criteria) this;
        }

        public Criteria andPROVIDLessThan(BigDecimal value) {
            addCriterion("PROVID <", value, "PROVID");
            return (Criteria) this;
        }

        public Criteria andPROVIDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PROVID <=", value, "PROVID");
            return (Criteria) this;
        }

        public Criteria andPROVIDIn(List<BigDecimal> values) {
            addCriterion("PROVID in", values, "PROVID");
            return (Criteria) this;
        }

        public Criteria andPROVIDNotIn(List<BigDecimal> values) {
            addCriterion("PROVID not in", values, "PROVID");
            return (Criteria) this;
        }

        public Criteria andPROVIDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PROVID between", value1, value2, "PROVID");
            return (Criteria) this;
        }

        public Criteria andPROVIDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PROVID not between", value1, value2, "PROVID");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMEIsNull() {
            addCriterion("COMPNAME is null");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMEIsNotNull() {
            addCriterion("COMPNAME is not null");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMEEqualTo(String value) {
            addCriterion("COMPNAME =", value, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMENotEqualTo(String value) {
            addCriterion("COMPNAME <>", value, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMEGreaterThan(String value) {
            addCriterion("COMPNAME >", value, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("COMPNAME >=", value, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMELessThan(String value) {
            addCriterion("COMPNAME <", value, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMELessThanOrEqualTo(String value) {
            addCriterion("COMPNAME <=", value, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMELike(String value) {
            addCriterion("COMPNAME like", value, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMENotLike(String value) {
            addCriterion("COMPNAME not like", value, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMEIn(List<String> values) {
            addCriterion("COMPNAME in", values, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMENotIn(List<String> values) {
            addCriterion("COMPNAME not in", values, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMEBetween(String value1, String value2) {
            addCriterion("COMPNAME between", value1, value2, "COMPNAME");
            return (Criteria) this;
        }

        public Criteria andCOMPNAMENotBetween(String value1, String value2) {
            addCriterion("COMPNAME not between", value1, value2, "COMPNAME");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TLOG_IP
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TLOG_IP
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}