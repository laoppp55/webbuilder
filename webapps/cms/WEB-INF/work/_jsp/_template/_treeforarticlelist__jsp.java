/*
 * JSP generated by Resin-4.0.58 (built Fri, 24 Aug 2018 01:23:14 PDT)
 */

package _jsp._template;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.util.*;
import com.bizwink.cms.tree.*;
import com.bizwink.cms.security.*;
import com.bizwink.cms.util.*;

public class _treeforarticlelist__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
    Auth authToken = SessionUtil.getUserAuthorization(request,response,session);
    if (authToken == null)
    {
        response.sendRedirect(response.encodeRedirectURL("../login.jsp?msg=\u7cfb\u7edf\u8d85\u65f6\uff0c\u8bf7\u91cd\u65b0\u767b\u9646!"));
        return;
    }

    int siteID = authToken.getSiteID();
    int samsiteid = authToken.getSamSiteid();
    int sitetype = authToken.getSitetype();
    Tree colTree = null;

    if (sitetype == 0 || sitetype == 2)                              //0\u8868\u793a\u81ea\u5df1\u521b\u5efa\u7684\u7f51\u7ad9\uff0c2\u8868\u793a\u5b8c\u6574\u62f7\u8d1d\u6a21\u677f\u7f51\u7ad9
        colTree = TreeManager.getInstance().getSiteTree(siteID);
    else
        colTree = TreeManager.getInstance().getSiteTreeIncludeSampleSite(siteID,samsiteid);

    node[] treeNodes = colTree.getAllNodes();                     //\u83b7\u53d6\u8be5\u6811\u7684\u6240\u6709\u8282\u70b9
    int pid[] = new int[colTree.getNodeNum()];                    //\u904d\u5386\u6811\u6240\u9700\u8981\u7684\u8282\u70b9\u6570\u7ec4\uff0c\u5b58\u50a8\u5f53\u524d\u672a\u5904\u7406\u7684\u8282\u70b9
    String parentMenuName[] = new String[colTree.getNodeNum()];   //\u5b58\u50a8\u67d0\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u7684\u7236\u83dc\u5355\u540d\u79f0
    String parentMenu="menu";                                     //\u5b58\u50a8\u5f53\u524d\u8282\u70b9\u7684\u7236\u83dc\u5355\u540d\u79f0
    String menuName = "menu";                                     //\u5b58\u50a8\u5f53\u524d\u8282\u70b9\u7684\u83dc\u5355\u540d\u79f0
    int currentID = 0;                                            //\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u8282\u70b9
    int i=0;                                                      //\u5faa\u73af\u53d8\u91cf
    int[] ordernum = new int[colTree.getNodeNum()];               //\u5f53\u524d\u8282\u70b9\u6240\u6709\u5b50\u8282\u70b9\u7684\u987a\u5e8f\u53f7
    int orderNumber = 0;                                          //\u5f53\u524d\u8282\u70b9\u5728\u540c\u7ea7\u8282\u70b9\u7684\u987a\u5e8f\u53f7
    int nodenum = 1;                                              //\u5f53\u524d\u88ab\u5904\u7406\u8282\u70b9\u7684\u521d\u59cb\u503c
    int subflag = 1;                                              //\u5224\u65ad\u5f53\u524d\u8282\u70b9\u662f\u5426\u6709\u5b50\u8282\u70b9
    StringBuffer buf = new StringBuffer();                        //\u5b58\u50a8\u751f\u6210\u7684\u83dc\u5355\u6811

    do
    {
        currentID = pid[nodenum];

        //\u8bbe\u7f6e\u5f53\u524d\u5904\u7406\u8282\u70b9\u7684\u521d\u59cb\u503c
        if(currentID != 0)
        {
            parentMenu = parentMenuName[nodenum];
            orderNumber = ordernum[nodenum];
            menuName = "menu"+currentID;
        }

        //\u4ece\u5904\u7406\u7684\u8282\u70b9\u6570\u7ec4\u4e2d\u53d6\u51fa\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u5143\u7d20\uff0c\u67e5\u627e\u8be5\u5143\u7d20\u4e0b\u7684\u5b50\u5143\u7d20
        //\u8bbe\u7f6e\u6240\u6709\u5b50\u8282\u70b9\u7684\u7236\u83dc\u5355\u540d\u79f0\uff0c\u8bbe\u7f6e\u6240\u6709\u5b50\u8282\u70b9\u7684\u5e8f\u5217\u53f7\uff0c\u628a\u6240\u6709\u7684\u5b50\u8282\u70b9\u5b58\u5165pid\u6570\u7ec4\u4e2d
        subflag = 0;
        nodenum = nodenum - 1;
        for (i=0;i<colTree.getNodeNum();i++)
        {
            if (treeNodes[i].getLinkPointer() == currentID)
            {
                nodenum = nodenum + 1;
                pid[nodenum] = treeNodes[i].getId();
                parentMenuName[nodenum] = menuName;
                ordernum[nodenum] = subflag;
                subflag = subflag + 1;
            }
        }

        //\u5982\u679c\u5f53\u524d\u8282\u70b9\u6709\u5b50\u8282\u70b9\uff0c\u751f\u6210\u5f53\u524d\u8282\u70b9\u7684\u83dc\u5355
        if (subflag != 0)
        {
            buf.append("var "+menuName+" = null;\n");
            buf.append(menuName+" = new MTMenu();\n");
        }
        for (i=0;i<colTree.getNodeNum();i++)
        {
            if (treeNodes[i].getLinkPointer() == currentID)
            {
                String cname = StringUtil.gb2iso4View(treeNodes[i].getChName());
                String name  = "<font class=line>"+cname+"</font>";
                buf.append(menuName).append(".MTMAddItem(new MTMenuItem(\"");
                buf.append(name).append("\",\"javascript:parent.frames['cmsleft'].abc('"+StringUtil.replace(cname,"'","`")+"','"+treeNodes[i].getId()+"')\", \"\"));");
                buf.append("\n");
            }
        }

        //\u5173\u8054\u5f53\u524d\u83dc\u5355\u548c\u4ed6\u7684\u7236\u83dc\u5355
        if(subflag != 0 && currentID != 0)
            buf.append(parentMenu+".items["+orderNumber+"].MTMakeSubmenu(" + menuName + ");\r\n");
    }while(nodenum >= 1);
    //\u76f4\u5230pid\u6570\u7ec4\u4e2d\u6ca1\u6709\u5f85\u5904\u7406\u7684\u8282\u70b9\u4e3a\u6b62

    out.write(_jsp_string1, 0, _jsp_string1.length);
    out.print((buf.toString()));
    out.write(_jsp_string2, 0, _jsp_string2.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6165118203484593848L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("template/treeforArticleList.jsp"), -3890322386749764519L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  private final static char []_jsp_string0;
  static {
    _jsp_string1 = "\r\n\r\n<html>\r\n<head>\r\n    <title></title>\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n    <link rel=stylesheet type=\"text/css\" href=\"../style/global.css\">\r\n    <script language=\"javascript\">\r\n        function abc(par1,par2)\r\n        {\r\n            var el = window.parent.frames['cmsright'].document.getElementById('selectedColumn');\r\n            var endFlag = true;\r\n            i = 0;\r\n            optionLen = el.options.length;\r\n            while(( i < optionLen) && endFlag)\r\n            {\r\n                if (el.options[i].value == par2)\r\n                {\r\n                    endFlag = false;\r\n                    alert(\"\u8bf7\u4e0d\u8981\u91cd\u590d\u9009\u62e9\u680f\u76ee\");\r\n                }\r\n                i++;\r\n            }\r\n\r\n            par1 = par1.replace(\"`\",\"'\");\r\n            if (endFlag)\r\n                window.parent.frames['cmsright'].document.getElementById('selectedColumn').options.add(new Option(par1,par2,false,false));\r\n        }\r\n        var needDrag = 0;\r\n    </script>\r\n</head>\r\n<script type=\"text/javascript\" src=\"../js/mtmcode.js\"></script>\r\n<script type=\"text/javascript\">\r\n    ".toCharArray();
    _jsp_string2 = "\r\n</script>\r\n<BODY onload=\"MTMStartMenu(true)\" leftMargin=0 topMargin=0 MARGINHEIGHT=\"0\" MARGINWIDTH=\"0\">\r\n</BODY></html>".toCharArray();
    _jsp_string0 = "\r\n".toCharArray();
  }
}
