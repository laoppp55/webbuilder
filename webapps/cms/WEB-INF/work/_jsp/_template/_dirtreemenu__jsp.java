/*
 * JSP generated by Resin-4.0.58 (built Fri, 24 Aug 2018 01:23:14 PDT)
 */

package _jsp._template;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.util.*;
import com.bizwink.cms.tree.*;
import com.bizwink.cms.security.*;
import com.bizwink.cms.util.*;

public class _dirtreemenu__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
  Auth authToken = SessionUtil.getUserAuthorization(request,response,session);
  if (authToken == null)
  {
    response.sendRedirect(response.encodeRedirectURL("../login.jsp?msg=\u7cfb\u7edf\u8d85\u65f6\uff0c\u8bf7\u91cd\u65b0\u767b\u9646!"));
    return;
  }

  int columnID  = ParamUtil.getIntParameter(request, "column", 0);
  String sitename = authToken.getSitename();
  String baseDir = application.getRealPath("/");
  String rootDir = baseDir + "sites" + java.io.File.separator + sitename + java.io.File.separator + "_templates" + java.io.File.separator;
  System.out.println("rootDir==" + rootDir);
  Tree dirTree = TreeManager.getInstance().getDirTree(rootDir);         //\u83b7\u53d6\u5728\u670d\u52a1\u5668\u7aef\u751f\u6210\u7684\u4e00\u68f5\u6811
  node[] treeNodes = dirTree.getAllNodes();                             //\u83b7\u53d6\u8be5\u6811\u7684\u6240\u6709\u8282\u70b9
  String parentMenuName[] = new String[dirTree.getNodeNum()];           //\u5b58\u50a8\u67d0\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u7684\u7236\u83dc\u5355\u540d\u79f0
  String parentMenu="menu";                                             //\u5b58\u50a8\u5f53\u524d\u8282\u70b9\u7684\u7236\u83dc\u5355\u540d\u79f0
  String menuName = "menu";                                             //\u5b58\u50a8\u5f53\u524d\u8282\u70b9\u7684\u83dc\u5355\u540d\u79f0
  int currentID = 0;                                                    //\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u8282\u70b9
  int i=0,j=0;                                                          //\u5faa\u73af\u53d8\u91cf
  int[] ordernum = new int[dirTree.getNodeNum()];                       //\u5f53\u524d\u8282\u70b9\u6240\u6709\u5b50\u8282\u70b9\u7684\u987a\u5e8f\u53f7
  int orderNumber = 0;                                                  //\u5f53\u524d\u8282\u70b9\u5728\u540c\u7ea7\u8282\u70b9\u7684\u987a\u5e8f\u53f7
  int subflag = 1;                                                      //\u5224\u65ad\u5f53\u524d\u8282\u70b9\u662f\u5426\u6709\u5b50\u8282\u70b9
  StringBuffer buf = new StringBuffer();                                //\u5b58\u50a8\u751f\u6210\u7684\u83dc\u5355\u6811

  for (i=0; i< dirTree.getNodeNum(); i++)
  {
    currentID = i;

    //\u8bbe\u7f6e\u5f53\u524d\u5904\u7406\u8282\u70b9\u7684\u521d\u59cb\u503c
    if(currentID != 0){
      parentMenu = parentMenuName[i];
      orderNumber = ordernum[i];
      menuName = "menu"+currentID;
    }

    //\u4ece\u5904\u7406\u7684\u8282\u70b9\u6570\u7ec4\u4e2d\u53d6\u51fa\u5f53\u524d\u6b63\u5728\u5904\u7406\u7684\u5143\u7d20\uff0c\u67e5\u627e\u8be5\u5143\u7d20\u4e0b\u7684\u5b50\u5143\u7d20
    //\u8bbe\u7f6e\u6240\u6709\u5b50\u8282\u70b9\u7684\u7236\u83dc\u5355\u540d\u79f0\uff0c\u8bbe\u7f6e\u6240\u6709\u5b50\u8282\u70b9\u7684\u5e8f\u5217\u53f7\uff0c\u628a\u6240\u6709\u7684\u5b50\u8282\u70b9\u5b58\u5165pid\u6570\u7ec4\u4e2d
    subflag = 0;
    for(j=0; j<dirTree.getNodeNum(); j++) {
      if(treeNodes[j].getLinkPointer() == currentID) {
        parentMenuName[j] = menuName;
        ordernum[j] = subflag;
        subflag = subflag + 1;
      }
    }

    //\u5982\u679c\u5f53\u524d\u8282\u70b9\u6709\u5b50\u8282\u70b9\uff0c\u751f\u6210\u5f53\u524d\u8282\u70b9\u7684\u83dc\u5355
    if (subflag != 0) {
      buf.append("var "+menuName+" = null;\n");
      buf.append(menuName+" = new MTMenu();\n");
    }
    for(j=0;j<dirTree.getNodeNum();j++) {
      if(treeNodes[j].getLinkPointer() == currentID) {
        int id = treeNodes[j].getId();
        String path = dirTree.getFileSystemDirName(dirTree,id);
        String name  = "<font class=line>"+treeNodes[j].getEnName() + "</font>";
        buf.append(menuName).append(".MTMAddItem(new MTMenuItem(\"");
        buf.append(name).append("\",\"listfile.jsp?path=" + path +  "&column=" + columnID + "\"" + "));");
        buf.append("\n");
      }
    }

    //\u5173\u8054\u5f53\u524d\u83dc\u5355\u548c\u4ed6\u7684\u7236\u83dc\u5355
    if(subflag != 0 && currentID != 0)
      buf.append(parentMenu+".items["+orderNumber+"].MTMakeSubmenu(" + menuName + ");\r\n");
  }
  System.out.println(buf.toString());

    out.write(_jsp_string1, 0, _jsp_string1.length);
    
  if (buf.length() == 0)
  {
    buf.append("var menu = null;\n");
    buf.append("menu = new MTMenu();\n");
  }
  out.println(buf.toString());

    out.write(_jsp_string2, 0, _jsp_string2.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6165118203484593848L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("template/dirTreeMenu.jsp"), 8244485588264276180L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  private final static char []_jsp_string0;
  static {
    _jsp_string1 = "\r\n<html>\r\n<head>\r\n<title></title>\r\n<link rel=stylesheet type=\"text/css\" href=\"../style/global.css\">\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n</head>\r\n<script type=\"text/javascript\" src=\"../js/mtmcode.js\"></script>\r\n<script type=\"text/javascript\">\r\nvar needDrag = 0;\r\n".toCharArray();
    _jsp_string2 = "\r\n</script>\r\n<BODY onload=\"MTMStartMenu(true)\" leftMargin=0 topMargin=0 MARGINHEIGHT=\"0\" MARGINWIDTH=\"0\">\r\n</BODY></html>".toCharArray();
    _jsp_string0 = "\r\n".toCharArray();
  }
}
