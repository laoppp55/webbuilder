/*
 * JSP generated by Resin-4.0.58 (built Fri, 24 Aug 2018 01:23:14 PDT)
 */

package _jsp._article;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import com.bizwink.cms.news.Column;
import java.util.*;
import com.bizwink.cms.tree.*;
import com.bizwink.cms.security.*;
import com.bizwink.cms.util.*;

public class _treeforpubcolumns__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
    Auth authToken = SessionUtil.getUserAuthorization(request, response, session);
    if (authToken == null) {
        response.sendRedirect(response.encodeRedirectURL("../login.jsp?msg=\u7cfb\u7edf\u8d85\u65f6\uff0c\u8bf7\u91cd\u65b0\u767b\u9646!"));
        return;
    }

    String userid = authToken.getUserID();
    int siteid = authToken.getSiteID();
    int samsiteid = authToken.getSamSiteid();
    int sitetype = authToken.getSitetype();
    int rightid = ParamUtil.getIntParameter(request, "rightid", 0);
    Tree colTree = null;
    String tbuf = null;

    if (sitetype == 0 || sitetype == 2) {                             //0\u8868\u793a\u81ea\u5df1\u521b\u5efa\u7684\u7f51\u7ad9\uff0c2\u8868\u793a\u5b8c\u6574\u62f7\u8d1d\u6a21\u677f\u7f51\u7ad9
        if (!userid.equalsIgnoreCase("admin") && !SecurityCheck.hasPermission(authToken, 54)) {
            //\u666e\u901a\u7528\u6237
            List clist = new ArrayList();
            PermissionSet p_set = authToken.getPermissionSet();
            Iterator iter1 = p_set.elements();
            while (iter1.hasNext()) {
                Permission permission = (Permission) iter1.next();
                if (rightid == permission.getRightID()) {
                    clist = permission.getColumnListOnRight();
                    break;
                }
            }
            colTree = TreeManager.getInstance().getUserTree(userid, siteid, clist,rightid);
            node[] treeNodes = colTree.getAllNodes();
            if (colTree.getNodeNum()> 0) {
                tbuf = "[\r\n";
                for(int ii=0;ii<colTree.getNodeNum();ii++){
                    if (ii<colTree.getNodeNum()-1) {
                        if (treeNodes[ii].getLinkPointer()==0)
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:"+ treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() +"\",url:\"\"" + ",open:\"true\"" +"},\r\n";
                        else
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:"+ treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() +"\"},\r\n";
                    }else {
                        if (treeNodes[ii].getLinkPointer() == 0)
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:" + treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() + "\",url:\"#\"" + ",open:\"true\"" + "}\r\n";
                        else
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:" + treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() + "\"}\r\n";
                    }
                }
                tbuf = tbuf + "]";
            }
        } else if (!userid.equalsIgnoreCase("admin") && SecurityCheck.hasPermission(authToken, 54)) {
            //\u7ad9\u70b9\u7ba1\u7406\u5458
            colTree = TreeManager.getInstance().getSiteTree(siteid);
            node[] treeNodes = colTree.getAllNodes();
            if (colTree.getNodeNum()> 0) {
                tbuf = "[\r\n";
                for(int ii=0;ii<colTree.getNodeNum();ii++){
                    if (ii<colTree.getNodeNum()-1) {
                        if (treeNodes[ii].getLinkPointer()==0)
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:"+ treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() +"\",url:\"\"" + ",open:\"true\"" +"},\r\n";
                        else
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:"+ treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() +"\"},\r\n";
                    }else {
                        if (treeNodes[ii].getLinkPointer() == 0)
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:" + treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() + "\",url:\"#\"" + ",open:\"true\"" + "}\r\n";
                        else
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:" + treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() + "\"}\r\n";
                    }
                }
                tbuf = tbuf + "]";
            }
        }
    } else {                                                           //1\u8868\u793a\u5171\u4eab\u6a21\u677f\u7f51\u7ad9\u7684\u680f\u76ee\u548c\u6a21\u677f
        if (!userid.equalsIgnoreCase("admin") && !SecurityCheck.hasPermission(authToken, 54)) {
            //\u666e\u901a\u7528\u6237
            List clist = new ArrayList();
            PermissionSet p_set = authToken.getPermissionSet();
            Iterator iter1 = p_set.elements();
            while (iter1.hasNext()) {
                Permission permission = (Permission) iter1.next();
                if (rightid == permission.getRightID()) {
                    clist = permission.getColumnListOnRight();
                    break;
                }
            }
            colTree = TreeManager.getInstance().getUserTree(userid, siteid, clist,rightid);
            if (clist.size() > 0) {
                tbuf = "[\r\n";
                for(int ii=0;ii<clist.size();ii++){
                    Column column = (Column)clist.get(ii);
                    if (ii<clist.size()-1) {
                        if (column.getParentID()==0)
                            tbuf = tbuf + "{id:" +column.getID() + ",pId:"+ column.getParentID() + ",name:\"" + column.getCName() +"\",url:\"\"" + ",open:\"true\"" +"},\r\n";
                        else
                            tbuf = tbuf + "{id:" +column.getID() + ",pId:"+ column.getParentID() + ",name:\"" + column.getCName() +"\"},\r\n";
                    }else{
                        if (column.getParentID()==0)
                            tbuf = tbuf + "{id:" +column.getID() + ",pId:"+ column.getParentID() + ",name:\"" + column.getCName() +"\",url:\"#\"" + ",open:\"true\"" +"}\r\n";
                        else
                            tbuf = tbuf + "{id:" +column.getID() + ",pId:"+ column.getParentID() + ",name:\"" + column.getCName() +"\"}\r\n";
                    }
                }
                tbuf = tbuf + "]";
            }
        } else if (!userid.equalsIgnoreCase("admin") && SecurityCheck.hasPermission(authToken, 54)) {
            //\u7ad9\u70b9\u7ba1\u7406\u5458
            colTree = TreeManager.getInstance().getSiteTreeIncludeSampleSite(siteid,samsiteid);
            node[] treeNodes = colTree.getAllNodes();
            if (colTree.getNodeNum()> 0) {
                tbuf = "[\r\n";
                for(int ii=0;ii<colTree.getNodeNum();ii++){
                    if (ii<colTree.getNodeNum()-1) {
                        if (treeNodes[ii].getLinkPointer()==0)
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:"+ treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() +"\",url:\"\"" + ",open:\"true\"" +"},\r\n";
                        else
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:"+ treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() +"\"},\r\n";
                    }else {
                        if (treeNodes[ii].getLinkPointer() == 0)
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:" + treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() + "\",url:\"#\"" + ",open:\"true\"" + "}\r\n";
                        else
                            tbuf = tbuf + "{id:" + treeNodes[ii].getId() + ",pId:" + treeNodes[ii].getLinkPointer() + ",name:\"" + treeNodes[ii].getChName() + "\"}\r\n";
                    }
                }
                tbuf = tbuf + "]";
            }
        }
    }

    out.write(_jsp_string1, 0, _jsp_string1.length);
    out.print((tbuf));
    out.write(_jsp_string2, 0, _jsp_string2.length);
    out.print((rightid));
    out.write(_jsp_string3, 0, _jsp_string3.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6165118203484593848L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("article/treeforPubColumns.jsp"), 6338463606750914308L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  private final static char []_jsp_string3;
  private final static char []_jsp_string0;
  static {
    _jsp_string1 = "\r\n<html>\r\n<head>\r\n    <title></title>\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n    <link rel=stylesheet type=\"text/css\" href=\"../style/global.css\">\r\n    <link rel=\"stylesheet\" href=\"../css/zTreeStyle/zTreeStyle.css\" type=\"text/css\">\r\n    <script type=\"text/javascript\" src=\"../js/jquery-1.11.1.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../js/jquery.ztree.core-3.5.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../js/jquery.form.js\"></script>\r\n    <script type=\"text/javascript\" language=\"javascript\">\r\n        /**\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u6e90\uff0cztree\u652f\u6301json,\u6570\u7ec4\uff0cxml\u7b49\u683c\u5f0f\u7684**/\r\n        var columnnodes = ".toCharArray();
    _jsp_string2 = ";\r\n        /**ztree\u7684\u53c2\u6570\u914d\u7f6e\uff0csetting\u4e3b\u8981\u662f\u8bbe\u7f6e\u4e00\u4e9btree\u7684\u5c5e\u6027\uff0c\u662f\u672c\u5730\u6570\u636e\u6e90\uff0c\u8fd8\u662f\u8fdc\u7a0b\uff0c\u52a8\u753b\u6548\u679c\uff0c\u662f\u5426\u542b\u6709\u590d\u9009\u6846\u7b49\u7b49**/\r\n        var setting = {\r\n            check: { /**\u590d\u9009\u6846**/\r\n            enable: false,\r\n                chkboxType: {\"Y\":\"\", \"N\":\"\"}\r\n            },\r\n            view: {\r\n                //dblClickExpand: false,\r\n                showIcon: false,\r\n                expandSpeed: 300 //\u8bbe\u7f6e\u6811\u5c55\u5f00\u7684\u52a8\u753b\u901f\u5ea6\uff0cIE6\u4e0b\u9762\u6ca1\u6548\u679c\uff0c\r\n            },\r\n            data: {\r\n                simpleData: {   //\u7b80\u5355\u7684\u6570\u636e\u6e90\uff0c\u4e00\u822c\u5f00\u53d1\u4e2d\u90fd\u662f\u4ece\u6570\u636e\u5e93\u91cc\u8bfb\u53d6\uff0cAPI\u6709\u4ecb\u7ecd\uff0c\u8fd9\u91cc\u53ea\u662f\u672c\u5730\u7684\r\n                    enable: true,\r\n                    idKey: \"id\",  //id\u548cpid\uff0c\u8fd9\u91cc\u4e0d\u7528\u591a\u8bf4\u4e86\u5427\uff0c\u6811\u7684\u76ee\u5f55\u7ea7\u522b\r\n                    pIdKey: \"pId\",\r\n                    rootPId: 0   //\u6839\u8282\u70b9\r\n                }\r\n            },\r\n            callback: {     /**\u56de\u8c03\u51fd\u6570\u7684\u8bbe\u7f6e\uff0c\u968f\u4fbf\u5199\u4e86\u4e24\u4e2a**/\r\n            beforeClick: beforeClick,\r\n                onCheck: onCheck\r\n            }\r\n        };\r\n\r\n        $(document).ready(function(){//\u521d\u59cb\u5316ztree\u5bf9\u8c61\r\n            var zTreeDemo = $.fn.zTree.init($(\"#columnTree\"),setting, columnnodes);\r\n        });\r\n\r\n        function beforeClick(treeId, treeNode) {\r\n            parent.frames['cmsright'].location = \"articles.jsp?rightid=".toCharArray();
    _jsp_string3 = "&column=\" + treeNode.id;\r\n        }\r\n\r\n        function onCheck(e, treeId, treeNode) {\r\n            alert(\"onCheck\");\r\n        };\r\n    </script>\r\n</head>\r\n<body style=\"background-color:#dddddd;\">\r\n<input type=hidden name=justHref id=\"justHref\">\r\n<div style=\"height: 8px;\"></div>\r\n<div class=\"ztree\" id=\"columnTree\"></div>\r\n</body>\r\n</html>\r\n".toCharArray();
    _jsp_string0 = "\r\n".toCharArray();
  }
}
