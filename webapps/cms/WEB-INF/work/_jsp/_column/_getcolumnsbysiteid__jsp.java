/*
 * JSP generated by Resin-4.0.58 (built Fri, 24 Aug 2018 01:23:14 PDT)
 */

package _jsp._column;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import com.bizwink.cms.util.SessionUtil;
import com.bizwink.cms.security.Auth;
import com.bizwink.util.SpringInit;
import org.springframework.context.ApplicationContext;
import com.bizwink.service.ColumnService;
import com.bizwink.po.Column;
import java.util.*;
import java.math.BigDecimal;
import com.bizwink.cms.news.ColumnVO;
import java.sql.Timestamp;
import com.bizwink.cms.util.FileUtil;
import com.bizwink.cms.util.ParamUtil;
import java.text.SimpleDateFormat;

public class _getcolumnsbysiteid__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=UTF-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
    Auth authToken = SessionUtil.getUserAuthorization(request, response, session);
    if (authToken == null)
    {
        response.sendRedirect(response.encodeRedirectURL("/webbuilder/index.jsp?msg=\u7cfb\u7edf\u8d85\u65f6\uff0c\u8bf7\u91cd\u65b0\u767b\u9646!"));
        return;
    }

    response.setHeader("Pragma","No-cache");
    response.setHeader("Cache-Control","no-cache");
    response.setDateHeader("Expires", 0);
    int columnid = ParamUtil.getIntParameter(request,"column",0);

    int siteid = authToken.getSiteID();
    ApplicationContext appContext = SpringInit.getApplicationContext();
    List<Column> columns = new ArrayList<Column>();
    List<ColumnVO> columnVOs = null;
    Column rootColumn = null;
    if (appContext!=null) {
        ColumnService columnService = (ColumnService)appContext.getBean("columnService");
        rootColumn = columnService.getRootColumnBySiteid(BigDecimal.valueOf(siteid));
        columns = columnService.getSubColumns(BigDecimal.valueOf(columnid));
        if(columns.size()>0) columnVOs = new ArrayList<ColumnVO>();
        for(int ii=0;ii<columns.size();ii++) {
            Column column = columns.get(ii);
            int subcolumncount = columnService.getSubColumnsCount(column.getID()).intValue();
            ColumnVO columnVO = new ColumnVO();
            columnVO.setID(column.getID().intValue());
            columnVO.setParentID(column.getPARENTID().intValue());
            columnVO.setSiteid(column.getSITEID().intValue());
            columnVO.setOrderID(column.getORDERID().intValue());
            columnVO.setDirName(column.getDIRNAME());
            columnVO.setDefineAttr(column.getISDEFINEATTR());
            columnVO.setHasArticleModel(column.getHASARTICLEMODEL());
            columnVO.setCName(column.getCNAME());
            columnVO.setEName(column.getENAME());
            columnVO.setExtname(column.getEXTNAME());
            columnVO.setCreateDate(column.getCREATEDATE());
            columnVO.setLastUpdated(column.getLASTUPDATED());
            columnVO.setIsAudited(column.getISAUDITED());
            if (subcolumncount>0) {
                columnVO.setLeaf(false);
            } else{
                columnVO.setLeaf(true);
            }
            if (column.getID().intValue()!=rootColumn.getID().intValue()) columnVOs.add(columnVO);
        }
    }

    if (columnVOs != null) {
        SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        String jsondata = "";
        if (columnid == rootColumn.getID().intValue()) {     //\u70b9\u51fb\u9996\u9875\u8282\u70b9\u6269\u5c55\u680f\u76ee\u6811
            jsondata = "{\"total\":" + (columnVOs.size() + 1) + ",\"rows\":[\r\n";
            if (columnVOs.size() == 0)    //\u8868\u793a\u6811\u8868\u53ea\u6709\u4e00\u884c\u6570\u636e
                jsondata = jsondata + "{\"ID\":" + rootColumn.getID() + ",\"CNAME\":\"" + rootColumn.getCNAME() + "\",\"DIRNAME\":\"" + rootColumn.getDIRNAME() + "\",\"ORDERID\":" + rootColumn.getORDERID() + ",\"CREATEDATE\":\"" + dateformat.format(rootColumn.getCREATEDATE()) + "\"}\r\n";
            else                          //\u8868\u793a\u6811\u8868\u6709\u591a\u884c\u6570\u636e
                jsondata = jsondata + "{\"ID\":" + rootColumn.getID() + ",\"CNAME\":\"" + rootColumn.getCNAME() + "\",\"DIRNAME\":\"" + rootColumn.getDIRNAME() + "\",\"ORDERID\":" + rootColumn.getORDERID() + ",\"CREATEDATE\":\"" + dateformat.format(rootColumn.getCREATEDATE()) + "\"},\r\n";
        }  else {                                           //\u70b9\u51fb\u67d0\u4e2a\u8282\u70b9\u6269\u5c55\u680f\u76ee\u6811
            jsondata = "{\"total\":" + (columnVOs.size()) + ",\"rows\":[\r\n";
        }
        for (int ii = 0; ii < columnVOs.size(); ii++) {
            ColumnVO columnVO = columnVOs.get(ii);
            int pid = columnVO.getParentID();
            String cname = columnVO.getCName();
            if (ii < columnVOs.size() - 1) {
                if (pid > 0) {
                    if (!columnVO.isLeaf())
                        jsondata = jsondata + "{\"ID\":" + columnVO.getID() + ",\"_parentId\":" + pid + ",\"CNAME\":\"" + cname + "\",\"DIRNAME\":\"" + columnVO.getDirName() + "\",\"ORDERID\":" + columnVO.getOrderID() + ",\"CREATEDATE\":\"" + dateformat.format(columnVO.getCreateDate()) + "\",\"state\":\"closed\"},\r\n";
                    else
                        jsondata = jsondata + "{\"ID\":" + columnVO.getID() + ",\"_parentId\":" + pid + ",\"CNAME\":\"" + cname + "\",\"DIRNAME\":\"" + columnVO.getDirName() + "\",\"ORDERID\":" + columnVO.getOrderID() + ",\"CREATEDATE\":\"" + dateformat.format(columnVO.getCreateDate()) + "\"},\r\n";
                } else {
                    if (!columnVO.isLeaf())
                        jsondata = jsondata + "{\"ID\":" + columnVO.getID() + ",\"CNAME\":\"" + cname + "\",\"DIRNAME\":\"" + columnVO.getDirName() + "\",\"ORDERID\":" + columnVO.getOrderID() + ",\"CREATEDATE\":\"" + dateformat.format(columnVO.getCreateDate()) + "\",\"state\":\"closed\"},\r\n";
                    else
                        jsondata = jsondata + "{\"ID\":" + columnVO.getID() + ",\"CNAME\":\"" + cname + "\",\"DIRNAME\":\"" + columnVO.getDirName() + "\",\"ORDERID\":" + columnVO.getOrderID() + "},\r\n";
                }
            } else {
                if (pid > 0) {
                    if (!columnVO.isLeaf())
                        jsondata = jsondata + "{\"ID\":" + columnVO.getID() + ",\"_parentId\":" + pid + ",\"CNAME\":\"" + cname + "\",\"DIRNAME\":\"" + columnVO.getDirName() + "\",\"ORDERID\":" + columnVO.getOrderID() + ",\"CREATEDATE\":\"" + dateformat.format(columnVO.getCreateDate()) + "\",\"state\":\"closed\"}\r\n";
                    else
                        jsondata = jsondata + "{\"ID\":" + columnVO.getID() + ",\"_parentId\":" + pid + ",\"CNAME\":\"" + cname + "\",\"DIRNAME\":\"" + columnVO.getDirName() + "\",\"ORDERID\":" + columnVO.getOrderID() + ",\"CREATEDATE\":\"" + dateformat.format(columnVO.getCreateDate()) + "\"}\r\n";
                } else {
                    if (!columnVO.isLeaf())
                        jsondata = jsondata + "{\"ID\":" + columnVO.getID() + ",\"CNAME\":\"" + cname + "\",\"DIRNAME\":\"" + columnVO.getDirName() + "\",\"ORDERID\":" + columnVO.getOrderID() + ",\"CREATEDATE\":\"" + dateformat.format(columnVO.getCreateDate()) + "\",\"state\":\"closed\"}\r\n";
                    else
                        jsondata = jsondata + "{\"ID\":" + columnVO.getID() + ",\"CNAME\":\"" + cname + "\",\"DIRNAME\":\"" + columnVO.getDirName() + "\",\"ORDERID\":" + columnVO.getOrderID() + ",\"CREATEDATE\":\"" + dateformat.format(columnVO.getCreateDate()) + "\"}\r\n";
                }
            }
        }
        jsondata = jsondata +"]}";
        //FileUtil.writeFile(new StringBuffer(jsondata),"c:\\data\\1122.txt");
        //System.out.println(jsondata);
        out.print(jsondata);
        out.flush();
    } else {
        System.out.println("error");
        out.print("nodata");
        out.flush();
    }
    return;

  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6165118203484593848L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("column/getColumnsBySiteID.jsp"), 2548775203602767478L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string0;
  static {
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
  }
}
