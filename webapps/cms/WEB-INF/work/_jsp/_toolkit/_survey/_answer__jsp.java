/*
 * JSP generated by Resin-4.0.58 (built Fri, 24 Aug 2018 01:23:14 PDT)
 */

package _jsp._toolkit._survey;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import com.bizwink.cms.util.ParamUtil;
import com.bizwink.webapps.survey.answer.IAnswerManager;
import com.bizwink.webapps.survey.answer.AnswerException;
import com.bizwink.webapps.survey.answer.AnswerPeer;
import com.bizwink.webapps.survey.define.Define;
import java.util.ArrayList;
import java.util.List;
import com.bizwink.webapps.survey.define.DefinePeer;
import com.bizwink.webapps.survey.define.DefineException;
import com.bizwink.webapps.survey.define.IDefineManager;

public class _answer__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html;charset=GBK");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
    int sid = ParamUtil.getIntParameter(request, "sid", -1);

    Cookie[] cookies = request.getCookies();
    boolean existflag = false;
    for (int k = 0; k < cookies.length; k++) {
        Cookie c = cookies[k];
        String name = c.getName();

        if (name.equals("Survey_Bizwink_" + sid)) {
            existflag = true;
        }
    }

    if (existflag) {
        out.println("<script language=javascript>");
        out.println("alert(\"\u60a8\u5df2\u7ecf\u6295\u8fc7\u7968\u4e86\uff01\u8c22\u8c22\uff01\");");
        //out.println("window.history.go(-1);");
        out.println("window.location='viewResult.jsp?sid=" + sid + "';");
        //out.println("window.location='view.jsp?sid="+sid+"';");
        out.println("</script>");
    } else {
        IAnswerManager answerMgr = AnswerPeer.getInstance();
        IDefineManager defineMgr = DefinePeer.getInstance();
        List questionlist = new ArrayList();
        try {
            questionlist = defineMgr.getAllDefineQuestionsBySID(sid);
        } catch (DefineException e) {
            e.printStackTrace();
        }

        for (int i = 0; i < questionlist.size(); i++) {
            Define define = (Define) questionlist.get(i);
            int qid = define.getQid();
            int nother = define.getNother();

            String[] answers = request.getParameterValues("answer" + qid);
            String other = "";
            if (nother == 1) {
                other = ParamUtil.getParameter(request, "other" + qid);
            }
            try {
                answerMgr.createUserAnswers(sid, qid, 0, answers, nother, other);
            } catch (AnswerException e) {
                e.printStackTrace();
            }
        }

        //\u5199\u5165COOKIE
        Cookie cookie = new Cookie("Survey_Bizwink_" + sid, String.valueOf(sid));
        cookie.setMaxAge(60 * 60 * 24 * 2);
        response.addCookie(cookie);

        out.println("<script type=\"text/javascript\">");
        out.println("alert(\"\u6295\u7968\u6210\u529f\uff0c\u8c22\u8c22\u60a8\u7684\u53c2\u4e0e\uff01\");");
        //out.println("window.close();");
        //out.println("window.history.go(-1);");
        out.println("window.location='viewResult.jsp?sid=" + sid + "';");
        out.println("</script>");
    }

  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6165118203484593848L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("toolkit/survey/answer.jsp"), -6637911631616421034L, false);
    _caucho_depends.add(depend);
    loader.addDependency(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string0;
  static {
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
  }
}
